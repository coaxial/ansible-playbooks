---
- name: Load vars
  include_vars:
    file: file_server_vars.yml

- name: Install nfs server
  package:
    name: nfs-kernel-server
    state: present

- name: Create mount point for storage partition
  file:
    state: directory
    path: /media/storage
  when: ansible_devices.sdb is defined and not zfs_enable

- name: Mount storage partition
  lineinfile:
    path: /etc/fstab
    regexp: '^UUID={{ ansible_devices.sdb.partitions.sdb3.uuid }}'
    line: 'UUID={{ ansible_devices.sdb.partitions.sdb3.uuid }}  /media/storage  auto  defaults  0 0'
    validate: 'mount -a %s'
  when: ansible_devices.sdb is defined and not zfs_enable

- name: Configure exports
  template:
    src: templates/exports.j2
    dest: /etc/exports
    mode: 0644
    owner: root
    group: root

- name: Use static ports for NFS services
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: 0644
    owner: root
    group: root
  with_items:
    - src: templates/nfs-kernel-server.j2
      dest: /etc/default/nfs-kernel-server
    - src: templates/nfs-static-ports.conf.j2
      dest: /etc/sysctl.d/60-nfs-static-ports.conf
  register: nfs_ports

- name: Reboot server
  # so mountd is on the right port
  shell: sleep 2 && reboot
  # cf https://superuser.com/a/1106350/509068
  async: 1
  poll: 0
  ignore_errors: true
  when: nfs_ports.changed

- name: Wait for server to come back online
  when: nfs_ports.changed
  local_action:
    module: wait_for
    host: "{{ ansible_default_ipv4.address }}"
    state: started
    port: 22
    search_regex: OpenSSH
    delay: 15
  become: false

- name: Configure zfs storage
  include_tasks: zfs.yml

- name: Open firewall ports
  ufw:
    rule: allow
    from_ip: "{{ ansible_default_ipv4.network }}/24"
    to_port: "{{ item }}"
    proto: any
  with_items:
    - 111
    - 2049
    - "{{ ports.mountd }}"
    - "{{ ports.nlockmgr }}"
